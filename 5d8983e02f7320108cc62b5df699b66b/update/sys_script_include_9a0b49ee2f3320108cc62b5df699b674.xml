<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_9736_writenow.WriteNowUtils</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>This script include provides the utility functions used by the WriteNow application</description>
        <name>WriteNowUtils</name>
        <script><![CDATA[var WriteNowUtils = Class.create();
WriteNowUtils.prototype = {
    initialize: function() {},

    buildDictionary: function(table_name) {
        var whiteColor = sn_pdfgeneratorutils.Color([1, 1, 1]);
        var greyColor = sn_pdfgeneratorutils.Color([0.8, 0.8, 0.8]);
        var headerBgColor = new sn_pdfgeneratorutils.Color([0.4, 0.6, 0.8]);

        // Query the dictionary table using the table specified on the document
        var qryStr = 'name=' + table_name + '^internal_type!=collection^ORinternal_type=NULL^active=true';
        var gr = new GlideRecord('sys_dictionary');
        gr.addEncodedQuery(qryStr);
        gr.query();

        // declare table by providing width array and Boolean for large table
        var table = new sn_pdfgeneratorutils.Table([70, 200], false);

        var headerStyle = new sn_pdfgeneratorutils.Style;
        headerStyle.setBackgroundColor(headerBgColor);
        headerStyle.setTextAlignment("text-center");
        headerStyle.setBold();
        headerStyle.setFontColor(whiteColor);

        table.setHeaderStyle(headerStyle);

        var nParagraph = new sn_pdfgeneratorutils.Paragraph("Column Label");
        var sParagraph = new sn_pdfgeneratorutils.Paragraph("Column Name");

        var hdrCell1 = new sn_pdfgeneratorutils.Cell;
        var hdrCell2 = new sn_pdfgeneratorutils.Cell;

        hdrCell1.addParagraph(nParagraph);
        hdrCell2.addParagraph(sParagraph);

        table.addHeaderCell(hdrCell1);
        table.addHeaderCell(hdrCell2);

        var row = 0;

        while (gr.next()) {
            var numCell = new sn_pdfgeneratorutils.Cell;
            var sdCell = new sn_pdfgeneratorutils.Cell;

            var numberParagraph = new sn_pdfgeneratorutils.Paragraph(gr.column_label);
            var sdParagraph = new sn_pdfgeneratorutils.Paragraph(gr.element);

            numCell.addParagraph(numberParagraph);
            sdCell.addParagraph(sdParagraph);

            if (row % 2 == 1) {
                table.setDefaultbackGroundColor(greyColor);
            } else {
                table.setDefaultbackGroundColor(whiteColor);
            }

            table.addCell(numCell);
            table.addCell(sdCell);

            row = row + 1;
        }
        return table;

    },

    buildTable: function(srcTable, encQry, columns) {
        /*
        Parameters: source table, source table encoded query, source table columns
        */
        var whiteColor = sn_pdfgeneratorutils.Color([1, 1, 1]);
        var greyColor = sn_pdfgeneratorutils.Color([0.8, 0.8, 0.8]);
        var headerBgColor = new sn_pdfgeneratorutils.Color([0.4, 0.6, 0.8]);

        var gr = new GlideRecord(srcTable);
        gr.addEncodedQuery(encQry);
        gr.query();

        // declare table by providing width array and Boolean for large table
        var table = new sn_pdfgeneratorutils.Table([70, 200], false);

        var headerStyle = new sn_pdfgeneratorutils.Style;
        headerStyle.setBackgroundColor(headerBgColor);
        headerStyle.setTextAlignment("text-center");
        headerStyle.setBold();
        headerStyle.setFontColor(whiteColor);

        table.setHeaderStyle(headerStyle);

        var i;
		var counter = 1;
        for (i = 0; i < columns.length; i++) {
            columns[i];
        }

        var nParagraph = new sn_pdfgeneratorutils.Paragraph("Column Label");
        var sParagraph = new sn_pdfgeneratorutils.Paragraph("Column Name");

        var hdrCell1 = new sn_pdfgeneratorutils.Cell;
        var hdrCell2 = new sn_pdfgeneratorutils.Cell;

        hdrCell1.addParagraph(nParagraph);
        hdrCell2.addParagraph(sParagraph);

        table.addHeaderCell(hdrCell1);
        table.addHeaderCell(hdrCell2);

        var row = 0;

        while (gr.next()) {
            var numCell = new sn_pdfgeneratorutils.Cell;
            var sdCell = new sn_pdfgeneratorutils.Cell;

            var numberParagraph = new sn_pdfgeneratorutils.Paragraph(gr.column_label);
            var sdParagraph = new sn_pdfgeneratorutils.Paragraph(gr.element);

            numCell.addParagraph(numberParagraph);
            sdCell.addParagraph(sdParagraph);

            if (row % 2 == 1) {
                table.setDefaultbackGroundColor(greyColor);
            } else {
                table.setDefaultbackGroundColor(whiteColor);
            }

            table.addCell(numCell);
            table.addCell(sdCell);

            row = row + 1;
        }
        return table;

    },

    type: 'WriteNowUtils'


};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-05-01 13:18:44</sys_created_on>
        <sys_id>9a0b49ee2f3320108cc62b5df699b674</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>WriteNowUtils</sys_name>
        <sys_package display_value="WriteNow" source="x_9736_writenow">5d8983e02f7320108cc62b5df699b66b</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="WriteNow">5d8983e02f7320108cc62b5df699b66b</sys_scope>
        <sys_update_name>sys_script_include_9a0b49ee2f3320108cc62b5df699b674</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-05-01 14:06:26</sys_updated_on>
    </sys_script_include>
</record_update>
